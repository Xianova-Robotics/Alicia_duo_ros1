<launch>
    <arg name="namespace_prefix" default="Alicia_usb_handeyecalibration" />

    <arg name="marker_size" doc="Size of the ArUco marker used, in meters" default="0.1"/>
    <arg name="marker_id" doc="The ID of the ArUco marker used" default="100"/>

    <!-- start the USB cam -->
    <include file="$(find usb_cam)/launch/usb_cam-test.launch" />

    <!-- ============================================================== -->
    <!-- ==          手动发布的静态 TF (因为 usb_cam 不发布)         == -->
    <!-- ============================================================== -->

    <!-- 1. 发布 world -> camera_link 的变换 (Eye-on-Base) -->
    <!-- ** 你必须测量或估计相机相对于世界/固定参考点的实际位置和姿态! ** -->
    <!-- args: x y z yaw pitch roll parent_frame child_frame period_ms -->
    <node pkg="tf" type="static_transform_publisher" name="world_to_camera_link_broadcaster"
          args="1.0 0.0 0.5 3.14159 0 0 world camera_link 100" /> <!-- 示例值 -->

    <!-- 2. 发布 camera_link -> camera_rgb_optical_frame 的变换 -->
    <!-- 这个通常是固定的旋转，RPY=(0, -pi/2, -pi/2) 是常见约定 -->
    <!-- 确保 child_frame 名称与 aruco_tracker 的 camera_frame 参数一致 -->
    <node pkg="tf" type="static_transform_publisher" name="camera_link_to_optical_frame_broadcaster"
        args="0.0 0.0 0.0 -1.570796 0 -1.570796 camera_link camera_rgb_optical_frame 100" />

    <!-- ============================================================== -->
    <!-- ==                       启动 ArUco                         == -->
    <!-- ============================================================== -->
    <node name="aruco_tracker" pkg="aruco_ros" type="single">
        <remap from="/camera_info" to="/usb_cam/camera_info" />
        <remap from="/image" to="/usb_cam/image_raw" />
        <param name="image_is_rectified" value="true"/> <!-- 如果相机已校准 -->
        <param name="marker_size"        value="$(arg marker_size)"/>
        <param name="marker_id"          value="$(arg marker_id)"/>
        <!-- ArUco 结果相对于 camera_link 发布 -->
        <param name="reference_frame"    value="camera_link"/>
        <!-- ArUco 内部使用的光学坐标系名称 -->
        <param name="camera_frame"       value="camera_rgb_optical_frame"/>
        <!-- 发布的标记坐标系名称 -->
        <param name="marker_frame"       value="camera_marker" />
    </node>

</launch>